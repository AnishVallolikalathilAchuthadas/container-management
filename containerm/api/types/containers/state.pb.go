// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/types/containers/state.proto

package containers

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// State represents a container's state
type State struct {
	// pid represents the container's process's PID
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// started_at defines the time when this container was last started
	StartedAt string `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// error indicates whether there was a problem that has occurred while changing the state of a container
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// exit_code represents the last exit code of the container's internal root process
	ExitCode int64 `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// finished_at defines a timestamp of the last container's exit
	FinishedAt string `protobuf:"bytes,5,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// exited defines whether the container has exited on its own for some reason - daemon reboot or internal error - distinguishes between manual stop and internal exit
	Exited bool `protobuf:"varint,6,opt,name=exited,proto3" json:"exited,omitempty"`
	// dead identifies whether the underlying container is dead
	Dead bool `protobuf:"varint,7,opt,name=dead,proto3" json:"dead,omitempty"`
	// restarting identifies whether the underlying container is currently restarting
	Restarting bool `protobuf:"varint,8,opt,name=restarting,proto3" json:"restarting,omitempty"`
	// paused indicates whether this container is paused
	Paused bool `protobuf:"varint,9,opt,name=paused,proto3" json:"paused,omitempty"`
	// running indicates whether this container is running
	// Note: paused and running are not mutually exclusive as pausing actually requires the process to be running - it's only 'freezed' but still running
	Running bool `protobuf:"varint,10,opt,name=running,proto3" json:"running,omitempty"`
	// status represents the status of this container
	Status string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// oomKilled indicates whether this container is killed due to out of memory
	OomKilled            bool     `protobuf:"varint,12,opt,name=oomKilled,proto3" json:"oomKilled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_babc1b1379d5533f, []int{0}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *State) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *State) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *State) GetExitCode() int64 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *State) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *State) GetExited() bool {
	if m != nil {
		return m.Exited
	}
	return false
}

func (m *State) GetDead() bool {
	if m != nil {
		return m.Dead
	}
	return false
}

func (m *State) GetRestarting() bool {
	if m != nil {
		return m.Restarting
	}
	return false
}

func (m *State) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

func (m *State) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *State) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *State) GetOomKilled() bool {
	if m != nil {
		return m.OomKilled
	}
	return false
}

func init() {
	proto.RegisterType((*State)(nil), "github.com.eclipse_kanto.container_management.containerm.api.types.containers.State")
}

func init() {
	proto.RegisterFile("api/types/containers/state.proto", fileDescriptor_babc1b1379d5533f)
}

var fileDescriptor_babc1b1379d5533f = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xbf, 0x4f, 0xfb, 0x30,
	0x10, 0xc5, 0x95, 0xfe, 0xce, 0x75, 0xf9, 0xca, 0xfa, 0x0a, 0x59, 0x42, 0x40, 0xc4, 0xd4, 0xa5,
	0xc9, 0xc0, 0xc8, 0x54, 0x98, 0x59, 0xca, 0x82, 0xba, 0x44, 0x6e, 0x7c, 0xa4, 0x16, 0xc4, 0xb6,
	0xec, 0x8b, 0x04, 0xff, 0x0e, 0x7f, 0x29, 0xb2, 0x93, 0x62, 0x06, 0xb6, 0x7b, 0x9f, 0xf3, 0x7b,
	0xb2, 0xde, 0x41, 0x21, 0xac, 0xaa, 0xe8, 0xd3, 0xa2, 0xaf, 0x1a, 0xa3, 0x49, 0x28, 0x8d, 0xce,
	0x57, 0x9e, 0x04, 0x61, 0x69, 0x9d, 0x21, 0xc3, 0x9e, 0x5a, 0x45, 0xa7, 0xfe, 0x58, 0x36, 0xa6,
	0x2b, 0xb1, 0x79, 0x57, 0xd6, 0x63, 0xfd, 0x26, 0x34, 0x99, 0xf2, 0xc7, 0x50, 0x77, 0x42, 0x8b,
	0x16, 0x3b, 0xd4, 0x94, 0x60, 0x57, 0x0a, 0xab, 0xca, 0x18, 0x9d, 0xa0, 0xbf, 0xfd, 0x9a, 0xc0,
	0xfc, 0x39, 0xc4, 0xb3, 0x7f, 0x30, 0xb5, 0x4a, 0xf2, 0xac, 0xc8, 0x36, 0xd3, 0x7d, 0x18, 0xd9,
	0x15, 0x80, 0x27, 0xe1, 0x08, 0x65, 0x2d, 0x88, 0x4f, 0x8a, 0x6c, 0x93, 0xef, 0xf3, 0x91, 0xec,
	0x88, 0xfd, 0x87, 0x39, 0x3a, 0x67, 0x1c, 0x9f, 0xc6, 0xcd, 0x20, 0xd8, 0x25, 0xe4, 0xf8, 0xa1,
	0xa8, 0x6e, 0x8c, 0x44, 0x3e, 0x8b, 0x61, 0xab, 0x00, 0x1e, 0x8d, 0x44, 0x76, 0x03, 0xeb, 0x57,
	0xa5, 0x95, 0x3f, 0x0d, 0x91, 0xf3, 0x68, 0x84, 0x33, 0xda, 0x11, 0xbb, 0x80, 0x45, 0x78, 0x8c,
	0x92, 0x2f, 0x8a, 0x6c, 0xb3, 0xda, 0x8f, 0x8a, 0x31, 0x98, 0x49, 0x14, 0x92, 0x2f, 0x23, 0x8d,
	0x33, 0xbb, 0x06, 0x70, 0x18, 0xbf, 0xa3, 0x74, 0xcb, 0x57, 0x71, 0xf3, 0x8b, 0x84, 0x2c, 0x2b,
	0x7a, 0x8f, 0x92, 0xe7, 0x43, 0xd6, 0xa0, 0x18, 0x87, 0xa5, 0xeb, 0xb5, 0x0e, 0x26, 0x88, 0x8b,
	0xb3, 0x0c, 0x8e, 0x50, 0x75, 0xef, 0xf9, 0x3a, 0xfe, 0x6c, 0x54, 0x0f, 0x87, 0xc3, 0x4b, 0x6a,
	0xbd, 0x1a, 0x5b, 0xdf, 0xc6, 0xd6, 0xd3, 0x99, 0xb6, 0xa9, 0xf5, 0x04, 0xbb, 0xea, 0xaf, 0x83,
	0xde, 0xa7, 0xf1, 0xb8, 0x88, 0x67, 0xbd, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x57, 0x15, 0x18,
	0x4f, 0xfa, 0x01, 0x00, 0x00,
}
