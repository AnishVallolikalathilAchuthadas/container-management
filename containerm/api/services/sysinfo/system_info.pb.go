// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/services/sysinfo/system_info.proto

package sysinfo

import (
	context "context"
	fmt "fmt"
	sysinfo "github.com/eclipse-kanto/container-management/containerm/api/types/sysinfo"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProjectInfoResponse struct {
	ProjectInfo          *sysinfo.ProjectInfo `protobuf:"bytes,1,opt,name=project_info,json=projectInfo,proto3" json:"project_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProjectInfoResponse) Reset()         { *m = ProjectInfoResponse{} }
func (m *ProjectInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ProjectInfoResponse) ProtoMessage()    {}
func (*ProjectInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6f6aefb7c5d4ff7, []int{0}
}

func (m *ProjectInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectInfoResponse.Unmarshal(m, b)
}
func (m *ProjectInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectInfoResponse.Marshal(b, m, deterministic)
}
func (m *ProjectInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectInfoResponse.Merge(m, src)
}
func (m *ProjectInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ProjectInfoResponse.Size(m)
}
func (m *ProjectInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectInfoResponse proto.InternalMessageInfo

func (m *ProjectInfoResponse) GetProjectInfo() *sysinfo.ProjectInfo {
	if m != nil {
		return m.ProjectInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*ProjectInfoResponse)(nil), "github.com.eclipse_kanto.container_management.containerm.api.services.sysinfo.ProjectInfoResponse")
}

func init() {
	proto.RegisterFile("api/services/sysinfo/system_info.proto", fileDescriptor_c6f6aefb7c5d4ff7)
}

var fileDescriptor_c6f6aefb7c5d4ff7 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xb1, 0x4b, 0xc4, 0x30,
	0x14, 0xc6, 0xe9, 0xe2, 0x90, 0x73, 0xaa, 0x20, 0x52, 0x17, 0x11, 0x11, 0x97, 0x7b, 0x81, 0x73,
	0x74, 0x13, 0x1c, 0x1c, 0x04, 0x51, 0xe4, 0xc0, 0xa5, 0xa4, 0xe1, 0xb5, 0x46, 0x2f, 0x79, 0xa1,
	0xc9, 0x09, 0xf5, 0x3f, 0x70, 0x74, 0xf3, 0xcf, 0x95, 0xa4, 0xad, 0xc9, 0x70, 0x9b, 0x4e, 0xaf,
	0xdf, 0x6b, 0xf2, 0x7e, 0xef, 0xfb, 0x08, 0x3b, 0x17, 0x56, 0x71, 0x87, 0xfd, 0xbb, 0x92, 0xe8,
	0xb8, 0x1b, 0x9c, 0x32, 0x2d, 0x85, 0xea, 0x51, 0xd7, 0xe1, 0x1b, 0x6c, 0x4f, 0x9e, 0xca, 0xbb,
	0x4e, 0xf9, 0x97, 0x6d, 0x03, 0x92, 0x34, 0xa0, 0xdc, 0x28, 0xeb, 0xb0, 0x7e, 0x13, 0xc6, 0x13,
	0x48, 0x32, 0x5e, 0x28, 0x83, 0x7d, 0xad, 0x85, 0x11, 0x1d, 0x6a, 0x34, 0x3e, 0x35, 0x35, 0x08,
	0xab, 0x60, 0x06, 0xc0, 0x04, 0xa8, 0xce, 0x02, 0xd6, 0x0f, 0x36, 0x63, 0xda, 0x9e, 0x5e, 0x51,
	0xfa, 0x0c, 0x5a, 0x1d, 0x77, 0x44, 0xdd, 0x06, 0x79, 0x54, 0xcd, 0xb6, 0xe5, 0xa8, 0xad, 0x1f,
	0xc6, 0x9f, 0xa7, 0x5f, 0x05, 0x3b, 0xb8, 0x1f, 0xef, 0xdc, 0x9a, 0x96, 0x1e, 0xd0, 0x59, 0x32,
	0x0e, 0xcb, 0x0f, 0xb6, 0x9f, 0x8f, 0x3a, 0x2a, 0x4e, 0x8a, 0x8b, 0xc5, 0x6a, 0x0d, 0x7f, 0x32,
	0x10, 0x57, 0x9d, 0xb7, 0x87, 0x1c, 0xbb, 0xb0, 0x49, 0xac, 0xbe, 0x0b, 0xc6, 0x1e, 0x63, 0x76,
	0x41, 0x96, 0x9f, 0x05, 0x5b, 0x64, 0x67, 0xcb, 0x43, 0x18, 0x0d, 0xc1, 0x6c, 0x08, 0x6e, 0x82,
	0xa1, 0xaa, 0x81, 0x7f, 0x4d, 0x17, 0x76, 0xc4, 0x72, 0xbd, 0x7e, 0x7e, 0x4a, 0x10, 0x3e, 0x41,
	0x96, 0x11, 0xc2, 0x7f, 0xe7, 0x2d, 0x13, 0x24, 0x35, 0x35, 0xdf, 0xf5, 0x46, 0xae, 0xa6, 0xda,
	0xec, 0x45, 0x33, 0x97, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xc1, 0x40, 0xf3, 0x4a, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SystemInfoClient is the client API for SystemInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemInfoClient interface {
	ProjectInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ProjectInfoResponse, error)
}

type systemInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewSystemInfoClient(cc grpc.ClientConnInterface) SystemInfoClient {
	return &systemInfoClient{cc}
}

func (c *systemInfoClient) ProjectInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ProjectInfoResponse, error) {
	out := new(ProjectInfoResponse)
	err := c.cc.Invoke(ctx, "/github.com.eclipse_kanto.container_management.containerm.api.services.sysinfo.SystemInfo/ProjectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemInfoServer is the server API for SystemInfo service.
type SystemInfoServer interface {
	ProjectInfo(context.Context, *empty.Empty) (*ProjectInfoResponse, error)
}

// UnimplementedSystemInfoServer can be embedded to have forward compatible implementations.
type UnimplementedSystemInfoServer struct {
}

func (*UnimplementedSystemInfoServer) ProjectInfo(ctx context.Context, req *empty.Empty) (*ProjectInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProjectInfo not implemented")
}

func RegisterSystemInfoServer(s *grpc.Server, srv SystemInfoServer) {
	s.RegisterService(&_SystemInfo_serviceDesc, srv)
}

func _SystemInfo_ProjectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemInfoServer).ProjectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.eclipse_kanto.container_management.containerm.api.services.sysinfo.SystemInfo/ProjectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemInfoServer).ProjectInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.eclipse_kanto.container_management.containerm.api.services.sysinfo.SystemInfo",
	HandlerType: (*SystemInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProjectInfo",
			Handler:    _SystemInfo_ProjectInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/services/sysinfo/system_info.proto",
}
